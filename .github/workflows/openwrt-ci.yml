#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 20 10 1 * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Checkout
      uses: actions/checkout@v3.1.0
      with:
        ref: master

    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

    - name: 同步最新的源码
      run: |
          git remote add openwrt https://github.com/coolsnowwolf/lede.git --ff-only
          git pull openwrt master
          git remote -v
      
    - name: 自定义插件主题。
      run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/fw876/helloworld.git
          git clone https://github.com/xiaorouji/openwrt-passwall.git
          git clone https://github.com/xiaorouji/openwrt-passwall-packages.git
          git clone https://github.com/kenzok8/openwrt-packages.git
          git clone https://github.com/kenzok8/small.git
          git clone https://github.com/Lienol/openwrt-package.git
      
    - name: Update feeds
      run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

    - name: Generate configuration file
      run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_GRUB_IMAGES=y
          CONFIG_VMDK_IMAGES=y
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_brook=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_hysteria=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-netlink-diag=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_luci-app-passwall2=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Brook=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_IPv6_Nat=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_tuic_client=y
          CONFIG_PACKAGE_luci-app-passwall2_Iptables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_TUIC-Client=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_naiveproxy=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_tuic-client=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-geoip=y
          CONFIG_PACKAGE_v2ray-geosite=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_SING_BOX_WITH_CLASH_API=y
          CONFIG_SING_BOX_WITH_DHCP=y
          CONFIG_SING_BOX_WITH_ECH=y
          CONFIG_SING_BOX_WITH_QUIC=y
          CONFIG_SING_BOX_WITH_UTLS=y
          CONFIG_SING_BOX_WITH_WIREGUARD=y
          CONFIG_TARGET_KERNEL_PARTSIZE=64
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

    - name: Make download
      run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

    - name: Compile firmware
      run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

    - name: Prepare artifact
      run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_package
          path: ./artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_firmware
          path: ./bin/targets/

    - name: Upload release asset
      if: github.event == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
